# estimation
c2<-ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(a%>%ungroup()%>%filter(row_number()==nrow(a))%>%mutate(label=paste("Post mean: ",round(ymean_prepost,3))),
mapping=aes(x=time_to_treatment,y=ymean_prepost,label=label),nudge_y=-0.1,nudge_x=-4)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="top",legend.text = element_text(size=10,
face="bold"),
legend.key=element_blank(),legend.title = element_text(size=10,face="bold"))+
labs(colour="Group")
## dd chart
c1<-ggplot(df,aes(x=t,y=y,colour=as.factor(G)))+geom_jitter(alpha=0.2)+
geom_step(aes(x=t,y=ybar),size=2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="top",legend.text = element_text(size=10,
face="bold"),
legend.key=element_blank(),legend.title = element_text(size=10,face="bold"))+
labs(colour="Group")
library("patchwork")
c1 + c2
ggarrange(c1,c2)
library("ggarrange")
library("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
library("shiny")
library("lfe")
source("simulate_data.R")
library("bacondecomp")
library("tidyverse")
library("ggpubr")
library("kableExtra")
T2<-15
T3<-10
G2=30
G3=20
df<-simulate_data(
seed=1909,
T2=T2,                                                       # Treatment timing group 2
T3=T3,                                                       # Treatment timing group 3
m2=1,                              # Treatment effect group 2
m3=2,                              # Treatment effect group 3
mt2=0.02,                                  # Treatment effect growth rate  group 2
mt3=0.01,                                  # Treatment effect growth rate  group 3
G2=G2,                                                       # Size group 2
G3=G3                                                        # Size group 3
)
###################### Event study graph #####################################
df_me<-df%>%mutate(time_to_treatment=ifelse(G==2,t-T2,ifelse(G==3,t-T3,NA)))
a<-df_me%>%group_by(time_to_treatment)%>%mutate(ymean=mean(y)-1,y=y-1)%>%
mutate(post=ifelse(time_to_treatment<1,0,1))%>%
group_by(post)%>%mutate(ymean_prepost=mean(y))
# estimation
c2<-ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(a%>%ungroup()%>%filter(row_number()==nrow(a))%>%mutate(label=paste("Post mean: ",round(ymean_prepost,3))),
mapping=aes(x=time_to_treatment,y=ymean_prepost,label=label),nudge_y=-0.1,nudge_x=-4)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="top",legend.text = element_text(size=10,
face="bold"),
legend.key=element_blank(),legend.title = element_text(size=10,face="bold"))+
labs(colour="Group")
## dd chart
c1<-ggplot(df,aes(x=t,y=y,colour=as.factor(G)))+geom_jitter(alpha=0.2)+
geom_step(aes(x=t,y=ybar),size=2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="top",legend.text = element_text(size=10,
face="bold"),
legend.key=element_blank(),legend.title = element_text(size=10,face="bold"))+
labs(colour="Group")
ggarrange(c1,c2)
# estimation
c2<-ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(a%>%ungroup()%>%filter(row_number()==nrow(a))%>%mutate(label=paste("Post mean: ",round(ymean_prepost,3))),
mapping=aes(x=time_to_treatment,y=ymean_prepost,label=label),nudge_y=-0.1,nudge_x=-4)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="none",
legend.position="top",legend.text = element_text(size=10,
face="bold"),
legend.key=element_blank(),legend.title = element_text(size=10,face="bold"))+
labs(colour="Group")
## dd chart
c1<-ggplot(df,aes(x=t,y=y,colour=as.factor(G)))+geom_jitter(alpha=0.2)+
geom_step(aes(x=t,y=ybar),size=2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="top",legend.text = element_text(size=10,
face="bold"),
legend.key=element_blank(),legend.title = element_text(size=10,face="bold"))+
labs(colour="Group")
ggarrange(c1,c2)
# estimation
c2<-ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(a%>%ungroup()%>%filter(row_number()==nrow(a))%>%mutate(label=paste("Post mean: ",round(ymean_prepost,3))),
mapping=aes(x=time_to_treatment,y=ymean_prepost,label=label),nudge_y=-0.1,nudge_x=-4)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="none",
legend.position="top",legend.text = element_text(size=10,
face="bold"),
legend.key=element_blank(),legend.title = element_text(size=10,face="bold"))+
labs(colour="Group")
c2<-ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(a%>%ungroup()%>%filter(row_number()==nrow(a))%>%mutate(label=paste("Post mean: ",round(ymean_prepost,3))),
mapping=aes(x=time_to_treatment,y=ymean_prepost,label=label),nudge_y=-0.1,nudge_x=-4)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="none")
# estimation
c2<-ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(a%>%ungroup()%>%filter(row_number()==nrow(a))%>%mutate(label=paste("Post mean: ",round(ymean_prepost,3))),
mapping=aes(x=time_to_treatment,y=ymean_prepost,label=label),nudge_y=-0.1,nudge_x=-4)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="none")
## dd chart
c1<-ggplot(df,aes(x=t,y=y,colour=as.factor(G)))+geom_jitter(alpha=0.2)+
geom_step(aes(x=t,y=ybar),size=2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="top",legend.text = element_text(size=10,
face="bold"),
legend.key=element_blank(),legend.title = element_text(size=10,face="bold"))+
labs(colour="Group")
ggarrange(c1,c2)
library("patchwork")
library("patchwork")
c1+c2
c2<-ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(a%>%ungroup()%>%filter(row_number()==nrow(a))%>%mutate(label=paste("Post mean: ",round(ymean_prepost,3))),
mapping=aes(x=-2,y=ymean_prepost,label=label),nudge_y=-0.1)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="none")
## dd chart
c1<-ggplot(df,aes(x=t,y=y,colour=as.factor(G)))+geom_jitter(alpha=0.2)+
geom_step(aes(x=t,y=ybar),size=2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="top",legend.text = element_text(size=10,
face="bold"),
legend.key=element_blank(),legend.title = element_text(size=10,face="bold"))+
labs(colour="Group")
c1+c2
# estimation
c2<-ggplot(a)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(a%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(a%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(a%>%ungroup()%>%filter(row_number()==nrow(a))%>%mutate(label=paste("Post mean: ",round(ymean_prepost,3))),
mapping=aes(x=-4,y=ymean_prepost,label=label),nudge_y=-0.1)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="none")
## dd chart
c1<-ggplot(df,aes(x=t,y=y,colour=as.factor(G)))+geom_jitter(alpha=0.2)+
geom_step(aes(x=t,y=ybar),size=2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="top",legend.text = element_text(size=10,
face="bold"),
legend.key=element_blank(),legend.title = element_text(size=10,face="bold"))+
labs(colour="Group")
c1+c2
# event study
df_es<-df%>%mutate(time_to_treatment=ifelse(G==2,t-T2,ifelse(G==3,t-T3,NA)))
df_es<-df_es%>%group_by(time_to_treatment)%>%mutate(ymean=mean(y)-1,y=y-1)%>%
mutate(post=ifelse(time_to_treatment<1,0,1))%>%
group_by(post)%>%mutate(ymean_prepost=mean(y))
c2<-ggplot(df_es)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(df_es%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(df_es%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(df_es%>%ungroup()%>%filter(row_number()==nrow(a))%>%mutate(label=paste("Post mean:",round(ymean_prepost,3))),
mapping=aes(x=-4,y=ymean_prepost,label=label),nudge_y=-0.1)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="none")
##################################### Simulate data  ##############################################
T2<-15
T3<-10
G2=30
G3=20
df<-simulate_data(
seed=1909,
T2=T2,                                                       # Treatment timing group 2
T3=T3,                                                       # Treatment timing group 3
m2=1,                              # Treatment effect group 2
m3=2,                              # Treatment effect group 3
mt2=0.02,                                  # Treatment effect growth rate  group 2
mt3=0.01,                                  # Treatment effect growth rate  group 3
G2=G2,                                                       # Size group 2
G3=G3                                                        # Size group 3
)
###################### Event study graph #####################################
# event study
df_es<-df%>%mutate(time_to_treatment=ifelse(G==2,t-T2,ifelse(G==3,t-T3,NA)))
df_es<-df_es%>%group_by(time_to_treatment)%>%mutate(ymean=mean(y)-1,y=y-1)%>%
mutate(post=ifelse(time_to_treatment<1,0,1))%>%
group_by(post)%>%mutate(ymean_prepost=mean(y))
c2<-ggplot(df_es)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(df_es%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(df_es%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(df_es%>%ungroup()%>%filter(row_number()==nrow(a))%>%mutate(label=paste("Post mean:",round(ymean_prepost,3))),
mapping=aes(x=-4,y=ymean_prepost,label=label),nudge_y=-0.1)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="none")
## dd chart
c1<-ggplot(df,aes(x=t,y=y,colour=as.factor(G)))+geom_jitter(alpha=0.2)+
geom_step(aes(x=t,y=ybar),size=2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="top",legend.text = element_text(size=10,
face="bold"),
legend.key=element_blank(),legend.title = element_text(size=10,face="bold"))+
labs(colour="Group")
c1+c2
c2<-ggplot(df_es)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(df_es%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(df_es%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(df_es%>%ungroup()%>%filter(row_number()==nrow(a))%>%mutate(label=paste("Post mean:",round(ymean_prepost,3))),
mapping=aes(x=-4,y=ymean_prepost,label=label),nudge_y=-0.1)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="none")+labs(y="y-y[ass]")
## dd chart
c1<-ggplot(df,aes(x=t,y=y,colour=as.factor(G)))+geom_jitter(alpha=0.2)+
geom_step(aes(x=t,y=ybar),size=2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="top",legend.text = element_text(size=10,
face="bold"),
legend.key=element_blank(),legend.title = element_text(size=10,face="bold"))+
labs(colour="Group")
c1+c2
c2<-ggplot(df_es)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(df_es%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(df_es%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(df_es%>%ungroup()%>%filter(row_number()==nrow(a))%>%mutate(label=paste("Post mean:",round(ymean_prepost,3))),
mapping=aes(x=-4,y=ymean_prepost,label=label),nudge_y=-0.1)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="none")+labs(y=expression(y[t=0]))
## dd chart
c1<-ggplot(df,aes(x=t,y=y,colour=as.factor(G)))+geom_jitter(alpha=0.2)+
geom_step(aes(x=t,y=ybar),size=2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="top",legend.text = element_text(size=10,
face="bold"),
legend.key=element_blank(),legend.title = element_text(size=10,face="bold"))+
labs(colour="Group")
c1+c2
c2<-ggplot(df_es)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(df_es%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(df_es%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(df_es%>%ungroup()%>%filter(row_number()==nrow(a))%>%mutate(label=paste("Post mean:",round(ymean_prepost,3))),
mapping=aes(x=-4,y=ymean_prepost,label=label),nudge_y=-0.1)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="none")+labs(y=expression(y[ t=0 ]))
## dd chart
c1<-ggplot(df,aes(x=t,y=y,colour=as.factor(G)))+geom_jitter(alpha=0.2)+
geom_step(aes(x=t,y=ybar),size=2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="top",legend.text = element_text(size=10,
face="bold"),
legend.key=element_blank(),legend.title = element_text(size=10,face="bold"))+
labs(colour="Group")
c1+c2
c2<-ggplot(df_es)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(df_es%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(df_es%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(df_es%>%ungroup()%>%filter(row_number()==nrow(a))%>%mutate(label=paste("Post mean:",round(ymean_prepost,3))),
mapping=aes(x=-4,y=ymean_prepost,label=label),nudge_y=-0.1)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="none")+labs(y=expression(y["t=0"]))
## dd chart
c1<-ggplot(df,aes(x=t,y=y,colour=as.factor(G)))+geom_jitter(alpha=0.2)+
geom_step(aes(x=t,y=ybar),size=2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="top",legend.text = element_text(size=10,
face="bold"),
legend.key=element_blank(),legend.title = element_text(size=10,face="bold"))+
labs(colour="Group")
c1+c2
c2<-ggplot(df_es)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(df_es%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(df_es%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(df_es%>%ungroup()%>%filter(row_number()==nrow(a))%>%mutate(label=paste("Post mean:",round(ymean_prepost,3))),
mapping=aes(x=-4,y=ymean_prepost,label=label),nudge_y=-0.1)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="none")+labs(y=expression(y-y["t=0"]))
## dd chart
c1<-ggplot(df,aes(x=t,y=y,colour=as.factor(G)))+geom_jitter(alpha=0.2)+
geom_step(aes(x=t,y=ybar),size=2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="top",legend.text = element_text(size=10,
face="bold"),
legend.key=element_blank(),legend.title = element_text(size=10,face="bold"))+
labs(colour="Group")
c1+c2
c2<-ggplot(df_es)+geom_jitter(aes(x=time_to_treatment,y=y,colour=as.factor(G)),alpha=0.2)+
geom_line(aes(x=time_to_treatment,y=ymean),size=1)+
geom_line(df_es%>%filter(post==0),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_line(df_es%>%filter(post==1),mapping=aes(x=time_to_treatment,y=ymean_prepost),size=0.5,linetype="dashed")+
geom_text(df_es%>%ungroup()%>%filter(row_number()==nrow(a))%>%mutate(label=paste("Post mean:",round(ymean_prepost,3))),
mapping=aes(x=-4,y=ymean_prepost,label=label),nudge_y=-0.1)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="none")+labs(y=expression(y[t]-y["t=0"]))
## dd chart
c1<-ggplot(df,aes(x=t,y=y,colour=as.factor(G)))+geom_jitter(alpha=0.2)+
geom_step(aes(x=t,y=ybar),size=2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="top",legend.text = element_text(size=10,
face="bold"),
legend.key=element_blank(),legend.title = element_text(size=10,face="bold"))+
labs(colour="Group")
c1+c2
runApp('C:/Github/bacondecomp/Rfiles')
runApp('C:/Github/bacondecomp/Rfiles')
runApp('C:/Github/bacondecomp/Rfiles')
runApp('C:/Github/bacondecomp/Rfiles')
runApp('C:/Github/bacondecomp/Rfiles')
View(df_disp)
View(df_dgp)
df_dgp<-df%>%group_by(G)%>%filter(D==1)%>%summarise(ATT_DGP=round(mean(mean)-1,3))%>%
mutate(type=ifelse(G==2,"Group 2 ATT", "Group 3 ATT"),population_weight=ifelse(G==2,round(G2/(G2+G3),3),round(G3/(G2+G3),3)),
order=ifelse(G==2,2,5))%>%
ungroup()%>%select(-G)%>%select(type,ATT_DGP,population_weight,order)
# Overall
df_dgp<-rbind(df_dgp,
df_dgp%>%mutate(wDgp=ATT_DGP*population_weight)%>%summarise(ATT_DGP=round(sum(wDgp),3))%>%mutate(type="ATT",population_weight="",order=1))
View(df_dgp)
df_bacon <- bacon(y ~ D,data = df,id_var = "id",time_var = "t")    # Bacon decomp
# Adjust table to have same format
df_bacon_clean<-df_bacon%>%
mutate(type=ifelse(row_number()==1,"- Group 2 as treated & never treated as control.",
ifelse(row_number()==2,"- Group 3 as treated & never treated as control.",
ifelse(row_number()==3,"- Group 3 as treated & group 2 as control.",
"- Group 2 as treated & group 3 as control." ))),
order=ifelse(row_number()==1,3,ifelse(row_number()==2,6,ifelse(row_number()==3,7,4))),
estimate=round(estimate,3),weight=round(weight,3))%>%
select(type,estimate,weight,order)%>%mutate(ATT_DGP="",population_weight="")
# Calculate group estimated ATT
df_bacon_att<-df_bacon%>%mutate(watt=weight*estimate)%>%
group_by(treated)%>%summarise(weight=sum(weight),att=sum(watt))%>%
mutate(estimate=att/weight,type = ifelse(treated==T2+1, "Group 2 ATT", "Group 3 ATT"),order=ifelse(treated==T2+1,2,5))%>%
select(type,estimate,weight,order)
# Append overall estimated ATT (two way FE)
df_bacon_att<-rbind(df_bacon_att,
tibble(type="ATT",estimate=beta_twowayDD$beta[1,1],weight="",order=1))
#Append DGP and ATTs
df_bacon_att<-merge(df_bacon_att,df_dgp,by=c("type","order"),all.x = TRUE)%>%
mutate(estimate=round(estimate,3),weight=round(estimate,3))
#Append Goodman Decomp
df_disp<-rbind(df_bacon_clean,df_bacon_att)
View(df_disp)
df_disp<-df_disp%>%arrange(order)%>%select(type,ATT_DGP,population_weight,-order,estimate,weight)%>%
mutate(weight=ifelse(row_number()==1,"",weight))
View(df_disp)
runApp('C:/Github/bacondecomp/Rfiles')
View(df_disp)
View(df_disp)
runApp('C:/Github/bacondecomp/Rfiles')
runApp('C:/Github/bacondecomp/Rfiles')
runApp('C:/Github/bacondecomp/Rfiles')
df_es
df_es$time_to_treatment
median(df_es$time_to_treatment)
median(df_es$time_to_treatment,na.rm=TRUE)
runApp('C:/Github/bacondecomp/Rfiles')
runApp('C:/Github/bacondecomp/Rfiles')
runApp('C:/Github/bacondecomp/Rfiles')
runApp('C:/Github/bacondecomp/Rfiles')
runApp('C:/Github/bacondecomp/Rfiles')
df_bacon_clean<-df_bacon%>%
mutate(type=ifelse(row_number()==1,"- Group 2 as treated & never treated as control.",
ifelse(row_number()==2,"- Group 3 as treated & never treated as control.",
ifelse(row_number()==3,"- Group 3 as treated & group 2 as control.",
"- Group 2 as treated & group 3 as control." ))),
order=ifelse(row_number()==1,3,ifelse(row_number()==2,6,ifelse(row_number()==3,7,4))),
estimate=round(estimate,3),weight=round(weight,3))%>%
select(type,estimate,weight,order)%>%mutate(ATT_DGP="",population_weight="")
df_bacon_clean<-df_bacon%>%
mutate(type=ifelse(row_number()==1,"- Group 2 as treated & never treated as control.",
ifelse(row_number()==2,"- Group 3 as treated & never treated as control.",
ifelse(row_number()==3,"- Group 3 as treated & group 2 as control.",
"- Group 2 as treated & group 3 as control." ))),
order=ifelse(row_number()==1,3,ifelse(row_number()==2,6,ifelse(row_number()==3,7,4))),
estimate=round(estimate,3),weight=round(weight,3))%>%
select(type,estimate,weight,order)%>%mutate(ATT_DGP="",population_weight="")
View(df_bacon_clean)
# Calculate group estimated ATT
df_bacon_att<-df_bacon%>%mutate(watt=weight*estimate)%>%
group_by(treated)%>%summarise(weight=sum(weight),att=sum(watt))%>%
mutate(estimate=att/weight,type = ifelse(treated==T2+1, "Group 2 ATT", "Group 3 ATT"),order=ifelse(treated==T2+1,2,5))%>%
select(type,estimate,weight,order)
# Append overall estimated ATT (two way FE)
df_bacon_att<-rbind(df_bacon_att,
tibble(type="ATT",estimate=beta_twowayDD$beta[1,1],weight="",order=1))
View(df_bacon_att)
df_bacon_att<-merge(df_bacon_att,df_dgp,by=c("type","order"),all.x = TRUE)%>%
mutate(estimate=round(estimate,3),weight=round(estimate,3))
View(df_bacon_att)
df_bacon_att<-rbind(df_bacon_att,
tibble(type="ATT",estimate=beta_twowayDD$beta[1,1],weight="",order=1))
df_bacon_clean<-df_bacon%>%
mutate(type=ifelse(row_number()==1,"- Group 2 as treated & never treated as control.",
ifelse(row_number()==2,"- Group 3 as treated & never treated as control.",
ifelse(row_number()==3,"- Group 3 as treated & group 2 as control.",
"- Group 2 as treated & group 3 as control." ))),
order=ifelse(row_number()==1,3,ifelse(row_number()==2,6,ifelse(row_number()==3,7,4))),
estimate=round(estimate,3),weight=round(weight,3))%>%
select(type,estimate,weight,order)%>%mutate(ATT_DGP="",population_weight="")
# Calculate group estimated ATT
df_bacon_att<-df_bacon%>%mutate(watt=weight*estimate)%>%
group_by(treated)%>%summarise(weight=sum(weight),att=sum(watt))%>%
mutate(estimate=att/weight,type = ifelse(treated==T2+1, "Group 2 ATT", "Group 3 ATT"),order=ifelse(treated==T2+1,2,5))%>%
select(type,estimate,weight,order)
View(df_bacon_clean)
View(df_bacon_att)
df_bacon_att<-rbind(df_bacon_att,
tibble(type="ATT",estimate=beta_twowayDD$beta[1,1],weight="",order=1))
View(df_bacon_att)
df_bacon_att<-merge(df_bacon_att,df_dgp,by=c("type","order"),all.x = TRUE)%>%
mutate(estimate=round(estimate,3),weight=round(estimate,3))
View(df_bacon_att)
df_bacon_att
# Adjust table to have same format
df_bacon_clean<-df_bacon%>%
mutate(type=ifelse(row_number()==1,"- Group 2 as treated & never treated as control.",
ifelse(row_number()==2,"- Group 3 as treated & never treated as control.",
ifelse(row_number()==3,"- Group 3 as treated & group 2 as control.",
"- Group 2 as treated & group 3 as control." ))),
order=ifelse(row_number()==1,3,ifelse(row_number()==2,6,ifelse(row_number()==3,7,4))),
estimate=round(estimate,3),weight=round(weight,3))%>%
select(type,estimate,weight,order)%>%mutate(ATT_DGP="",population_weight="")
# Calculate group estimated ATT
df_bacon_att<-df_bacon%>%mutate(watt=weight*estimate)%>%
group_by(treated)%>%summarise(weight=sum(weight),att=sum(watt))%>%
mutate(estimate=att/weight,type = ifelse(treated==T2+1, "Group 2 ATT", "Group 3 ATT"),order=ifelse(treated==T2+1,2,5))%>%
select(type,estimate,weight,order)
# Append overall estimated ATT (two way FE)
df_bacon_att<-rbind(df_bacon_att,
tibble(type="ATT",estimate=beta_twowayDD$beta[1,1],weight="",order=1))
df_bacon_clean<-df_bacon%>%
mutate(type=ifelse(row_number()==1,"- Group 2 as treated & never treated as control.",
ifelse(row_number()==2,"- Group 3 as treated & never treated as control.",
ifelse(row_number()==3,"- Group 3 as treated & group 2 as control.",
"- Group 2 as treated & group 3 as control." ))),
order=ifelse(row_number()==1,3,ifelse(row_number()==2,6,ifelse(row_number()==3,7,4))),
estimate=round(estimate,3),weight=round(weight,3))%>%
select(type,estimate,weight,order)%>%mutate(ATT_DGP="",population_weight="")
# Calculate group estimated ATT
df_bacon_att<-df_bacon%>%mutate(watt=weight*estimate)%>%
group_by(treated)%>%summarise(weight=sum(weight),att=sum(watt))%>%
mutate(estimate=att/weight,type = ifelse(treated==T2+1, "Group 2 ATT", "Group 3 ATT"),order=ifelse(treated==T2+1,2,5))%>%
select(type,estimate,weight,order)
# Append overall estimated ATT (two way FE)
df_bacon_att<-rbind(df_bacon_att,
tibble(type="ATT",estimate=beta_twowayDD$beta[1,1],weight="",order=1))
##################################### Create overall table #########################################
#Append DGP and ATTs
merged<-merge(df_bacon_att,df_dgp,by=c("type","order"),all.x = TRUE)%>%
mutate(estimate=round(estimate,3),weight=round(estimate,3))
View(merged)
df_bacon_att
df_dgp
runApp('C:/Github/bacondecomp/Rfiles')
runApp()
runApp()
runApp('C:/Github/bacondecomp/Rfiles')
