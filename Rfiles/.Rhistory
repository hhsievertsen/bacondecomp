install.packages("bacondecomp")
library("bacondecomp")
df_bacon <- bacon(l_homicide ~ post,
data = bacondecomp::castle,
id_var = "state",
time_var = "year")
View(df_bacon)
library(shiny); runApp('C:/Users/hs17922/Dropbox/Work/Teaching/Economic Data/2019_2020/Coursework/marking/marking_tool/runapp.R')
runApp('C:/Users/hs17922/Dropbox/Work/Teaching/Economic Data/2019_2020/Coursework/marking/marking_tool/runapp.R')
runApp('C:/Users/hs17922/Dropbox/Work/Teaching/Economic Data/2019_2020/Coursework/marking/marking_tool/runapp.R')
set.seed(input$seed)                                            # Set seed
T<-30                                                           # Time periods
T2<-input$group2treatment                                       # Treatment timing group 2
T3<-input$group3treatment                                       # Treatment timing group 3
m0=1                                                            # Treatment effect baseline
m2=m0+input$group2treatmenteffect                               # Treatment effect group 2
m3=m0+input$group3treatmenteffect                               # Treatment effect group 3
mt2=(1+input$group2timeeffect)                                  # Treatment effect growth rate  group 2
mt3=(1+input$group3timeeffect)                                  # Treatment effect growth rate  group 3
G<-3                                                            # Groups
N<-30                                                           # Time periods
ATT1 <- input$group2treatmenteffect  *mt2^(T-T2)
ATT2 <- input$group3treatmenteffect  *mt3^(T-T3)
ATT_df <- tibble(Group = c("2", "3"),
ATT = c(ATT1, ATT2))
library("shiny")
library("lfe")
library("bacondecomp")
library("tidyverse")
set.seed(input$seed)                                            # Set seed
T<-30                                                           # Time periods
T2<-input$group2treatment                                       # Treatment timing group 2
T3<-input$group3treatment                                       # Treatment timing group 3
m0=1                                                            # Treatment effect baseline
m2=m0+input$group2treatmenteffect                               # Treatment effect group 2
m3=m0+input$group3treatmenteffect                               # Treatment effect group 3
mt2=(1+input$group2timeeffect)                                  # Treatment effect growth rate  group 2
mt3=(1+input$group3timeeffect)                                  # Treatment effect growth rate  group 3
G<-3                                                            # Groups
N<-30                                                           # Time periods
ATT1 <- input$group2treatmenteffect  *mt2^(T-T2)
ATT2 <- input$group3treatmenteffect  *mt3^(T-T3)
ATT_df <- tibble(Group = c("2", "3"),
ATT = c(ATT1, ATT2))
# exploring Goodman-Bacon (2019) DiD with variation in treatment timing
# Hans H. Sievertsen, first version: 12-5-2020, this version, 12-5-2020
# clear workspace
rm(list=ls())
# tidyverse
library("tidyverse")
library("lfe")
library("bacondecomp")
# the 3x3 case
T<-30
T2<-15
T3<-25
m0=1
m2=m0+1.5
m3=m0+2.5
mt2=1.00
mt3=1.00
G<-3
N<-20
df<-tibble(id=rep(1:(N*G),T),          # id variable 1 2 3 ... 1 2 3
t=rep(1:T,each=(N*G)))%>%    # time variable 1 1 1 1 .... 2 2 2
mutate(G=ifelse(id<=N,1,ifelse(id>N&id<=(N*2),2,3)),             # Assign group
D=ifelse(G==2&t>T2,1,ifelse(G==3&t>T3,1,0)),
mean=ifelse(D==1&G==2,m2*mt2^(t-T2),ifelse(D==1&G==3,m3*mt3^(t-T3),1)),
y=rnorm(n=N*G*T,mean=mean,sd=.1))%>%  # outcome y
group_by(G,D)%>%
mutate(ybar=mean(y)) # line for means
ggplot(df,aes(x=t,y=y,colour=as.factor(G)))+geom_jitter(alpha=0.2)+
geom_line(aes(x=t,y=ybar),size=2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="top",legend.text = element_text(size=10,
face="bold"),
legend.key=element_blank(),legend.title = element_text(size=10,face="bold"))+
labs(colour="Group")
# reg
df_bacon <- bacon(y ~ D,
data = df,
id_var = "id",
time_var = "t")
df_bacon%>%
mutate(type=ifelse(row_number()==1,"Group 2 as treated vs never treated.",
ifelse(row_number()==2,"Group 3 as treated vs never treated.",
ifelse(row_number()==3,"Group 3 as treated vs group 2 as control.",
"Group 2 as treated vs group 3 as control." ))))
df_bacon_w <- df_bacon %>%
mutate(control = ifelse(untreated==99999, "DD, control= Untreated", "DD, control= Switcher"),
Group = ifelse(treated==T2+1, "2", "3")) %>%
select(Group, control, estimate) %>%
spread(control, estimate)
View(df_bacon_w)
View(df_bacon)
# exploring Goodman-Bacon (2019) DiD with variation in treatment timing
# Hans H. Sievertsen, first version: 12-5-2020, this version, 12-5-2020
# clear workspace
rm(list=ls())
# tidyverse
library("tidyverse")
library("lfe")
library("bacondecomp")
# the 3x3 case
T<-30
T2<-15
T3<-25
m0=1
m2=m0+1.5
m3=m0+2.5
mt2=1.00
mt3=1.00
G<-3
N<-20
df<-tibble(id=rep(1:(N*G),T),          # id variable 1 2 3 ... 1 2 3
t=rep(1:T,each=(N*G)))%>%    # time variable 1 1 1 1 .... 2 2 2
mutate(G=ifelse(id<=N,1,ifelse(id>N&id<=(N*2),2,3)),             # Assign group
D=ifelse(G==2&t>T2,1,ifelse(G==3&t>T3,1,0)),
mean=ifelse(D==1&G==2,m2*mt2^(t-T2),ifelse(D==1&G==3,m3*mt3^(t-T3),1)),
y=rnorm(n=N*G*T,mean=mean,sd=.1))%>%  # outcome y
group_by(G,D)%>%
mutate(ybar=mean(y)) # line for means
ggplot(df,aes(x=t,y=y,colour=as.factor(G)))+geom_jitter(alpha=0.2)+
geom_line(aes(x=t,y=ybar),size=2) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position="top",legend.text = element_text(size=10,
face="bold"),
legend.key=element_blank(),legend.title = element_text(size=10,face="bold"))+
labs(colour="Group")
# reg
# bacon
df_bacon <- bacon(y ~ D,
data = df,
id_var = "id",
time_var = "t")
df_bacon%>%
mutate(type=ifelse(row_number()==1,"Group 2 as treated vs never treated.",
ifelse(row_number()==2,"Group 3 as treated vs never treated.",
ifelse(row_number()==3,"Group 3 as treated vs group 2 as control.",
"Group 2 as treated vs group 3 as control." ))))
# Added by 	MatthieuStigler
df_bacon_w <- df_bacon %>%
mutate(control = ifelse(untreated==99999, "DD, control= Untreated", "DD, control= Switcher"),
Group = ifelse(treated==T2+1, "2", "3")) %>%
select(Group, control, estimate) %>%
spread(control, estimate)
df_bacon_att<-df_bacon%>%mutate(watt=weight*estimate)%>%group_by(treated)
View(df_bacon_att)
df_bacon_att<-df_bacon%>%mutate(watt=weight*estimate)%>%group_by(treated)%>%summarise(weight=sum(weight),att=sum(watt))
View(df_bacon_att)
df_bacon_att<-df_bacon%>%mutate(watt=weight*estimate)%>%group_by(treated)%>%summarise(weight=sum(weight),att=sum(watt))%>%mutate(att=att/weight)
View(df_bacon_w)
View(df_bacon_att)
View(df_bacon_w)
View(df_bacon_att)
View(df_bacon_att)
df_bacon_att<-df_bacon%>%mutate(watt=weight*estimate)%>%group_by(treated)%>%summarise(weight=sum(weight),att=sum(watt))%>%mutate(att=att/weight)%>%
control = ifelse(untreated==99999, "DD, control= Untreated", "DD, control= Switcher")
df_bacon_att<-df_bacon%>%mutate(watt=weight*estimate)%>%group_by(treated)%>%summarise(weight=sum(weight),att=sum(watt))%>%mutate(att=att/weight,
Group = ifelse(treated==T2+1, "2", "3"))
View(df_bacon_att)
df_bacon_att<-df_bacon%>%mutate(watt=weight*estimate)%>%group_by(treated)%>%summarise(weight=sum(weight),att=sum(watt))%>%mutate(att=att/weight,
Group = ifelse(treated==T2+1, "2", "3"))%>%select(Group,att)
View(df_bacon_att)
df_bacon_att<-df_bacon%>%mutate(watt=weight*estimate)%>%group_by(treated)%>%summarise(weight=sum(weight),att=sum(watt))%>%mutate(ATT=att/weight,
Group = ifelse(treated==T2+1, "2", "3"))%>%select(Group,ATT)
runApp('C:/Github/bacondecomp/Rfiles/runapp.R')
runApp('C:/Github/bacondecomp/Rfiles/runapp.R')
runApp('C:/Github/bacondecomp/Rfiles/runapp.R')
setwd("C:\\Github\\bacondecomp\\Rfiles")
source("ui.R")
source("server.R")
shinyApp(ui,server)
runApp('runapp.R')
runApp()
runApp()
runApp('runapp.R')
runApp('runapp.R')
runApp()
runApp('runapp.R')
runApp()
library("kableExtra")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
T<-30
T2<-15
T3<-25
m0=1
m2=m0+1.5
m3=m0+2.5
mt2=1.00
mt3=1.00
G<-3
G1<-30
G2<-20
G3<-40
N<-G1+G2+G3
df<-tibble(id=rep(1:(N*G),T),          # id variable 1 2 3 ... 1 2 3
t=rep(1:T,each=(N*G)))%>%    # time variable 1 1 1 1 .... 2 2 2
mutate(G=ifelse(id<=N,1,ifelse(id>N&id<=(N*2),2,3)),             # Assign group
D=ifelse(G==2&t>T2,1,ifelse(G==3&t>T3,1,0)),
mean=ifelse(D==1&G==2,m2*mt2^(t-T2),ifelse(D==1&G==3,m3*mt3^(t-T3),1)),
y=rnorm(n=N*G*T,mean=mean,sd=.1))%>%  # outcome y
group_by(G,D)%>%
mutate(ybar=mean(y)) # line for means
df<-tibble(id=rep(1:(N*G),T),          # id variable 1 2 3 ... 1 2 3
t=rep(1:T,each=(N*G)))%>%    # time variable 1 1 1 1 .... 2 2 2
mutate(G=ifelse(id<=N,1,ifelse(id>N&id<=(N*2),2,3)),             # Assign group
D=ifelse(G==2&t>T2,1,ifelse(G==3&t>T3,1,0)),
mean=ifelse(D==1&G==2,m2*mt2^(t-T2),ifelse(D==1&G==3,m3*mt3^(t-T3),1)),
y=rnorm(n=N*G*T,mean=mean,sd=.1))%>%  # outcome y
group_by(G,D)%>%
mutate(ybar=mean(y)) # line for means
table(df$G)
N<-G1+G2+G3
df<-tibble(id=rep(1:(N*G),T),          # id variable 1 2 3 ... 1 2 3
t=rep(1:T,each=(N*G)))%>%    # time variable 1 1 1 1 .... 2 2 2
mutate(G=ifelse(id<=G1,1,ifelse(id>G1&id<=(G1+G2),2,3)),             # Assign group
D=ifelse(G==2&t>T2,1,ifelse(G==3&t>T3,1,0)),
mean=ifelse(D==1&G==2,m2*mt2^(t-T2),ifelse(D==1&G==3,m3*mt3^(t-T3),1)),
y=rnorm(n=N*G*T,mean=mean,sd=.1))%>%  # outcome y
group_by(G,D)%>%
mutate(ybar=mean(y)) # line for means
table(df$G)
View(df)
N
runApp()
